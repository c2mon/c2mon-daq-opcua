stages:
- build
- deploy
- sonar

services:
  # To obtain a Docker daemon, request a Docker-in-Docker service
  - docker:19.03.1-dind
  

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: "tcp://docker:2376/"
      
image: 
  name: gitlab-registry.cern.ch/industrial-controls/sw-infra/mvn-dind:3.6.2-19.3.0-jdk11
  entrypoint: [""]   


# Fully build and publish master branch
build_and_publish:
  stage: deploy
  tags: 
    - docker-privileged
  script: 
    - docker info
    - mvn -q -U -B -T4 clean deploy --settings settings.xml
  only:
    - master
    
# Just run tests on feature branches
build:
  stage: build
  tags: 
    - docker-privileged
  script:
    - docker info
    - mvn -q -U -B clean test -DskipDockerBuild -DskipDockerTag --settings settings.xml
  except:
    - master

sonar_preview:
  type: sonar
  script:
    - mvn -q -U -B clean compile sonar:sonar -Dmaven.test.skip=true -Dsonar.host.url=https://en-ice-sonar.cern.ch -Dsonar.analysis.mode=preview -Dsonar.gitlab.commit_sha=$CI_BUILD_REF -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.gitlab.max_major_issues_gate=0 --settings settings.xml --debug -X
  except:
    - master

quality_assurance:
  stage: sonar
  script:
    - mvn package dependency-check:aggregate sonar:sonar -Dmaven.test.skip=true -Dsonar.host.url=https://en-ice-sonar.cern.ch -Dsonar.dependencyCheck.reportPath=target/dependency-check-report.xml --settings settings.xml
  only:
    - master
