@startuml

title __SECURITY's Class Diagram__\n

  namespace cern.c2mon.daq.opcua {
    namespace security {
      class cern.c2mon.daq.opcua.security.CertificateGenerator {
          {static} - RSA_SHA256 : String
          {static} - SEVERE_ERROR_CODES : ImmutableSet<Long>
          {static} - SUPPORTED_SIG_ALGS : String[]
          {static} - log : Logger
          + CertificateGenerator()
          + canCertify()
          + getConfig()
          + getSevereErrorCodes()
          + supportsAlgorithm()
          - generateCertificate()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace security {
      class cern.c2mon.daq.opcua.security.CertificateLoader {
          {static} - SEVERE_ERROR_CODES : ImmutableSet<Long>
          {static} - log : Logger
          + CertificateLoader()
          + canCertify()
          + getKeystoreConfig()
          + getPkiConfig()
          + getSevereErrorCodes()
          + supportsAlgorithm()
          - isKeystoreConfigured()
          - isPkiConfigured()
          - loadCertificateAndKeypair()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace security {
      interface cern.c2mon.daq.opcua.security.Certifier {
          {abstract} + canCertify()
          {abstract} + certify()
          {abstract} + getSevereErrorCodes()
          {abstract} + supportsAlgorithm()
          {abstract} + uncertify()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace security {
      abstract class cern.c2mon.daq.opcua.security.CertifierBase {
          ~ certificate : X509Certificate
          ~ keyPair : KeyPair
          + certify()
          + uncertify()
          # existingCertificateMatchesEndpoint()
          # existingCertificateMatchesSecurityPolicy()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace security {
      class cern.c2mon.daq.opcua.security.NoSecurityCertifier {
          {static} - SEVERE_ERROR_CODES : ImmutableSet<Long>
          {static} - log : Logger
          + NoSecurityCertifier()
          + canCertify()
          + certify()
          + getSevereErrorCodes()
          + supportsAlgorithm()
          + uncertify()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace security {
      class cern.c2mon.daq.opcua.security.PkiUtil {
          {static} + loadCertificate()
          {static} + loadFromPfx()
          {static} + loadPrivateKey()
          {static} - getPemObject()
      }
    }
  }
  

  cern.c2mon.daq.opcua.security.CertificateGenerator -up-|> cern.c2mon.daq.opcua.security.CertifierBase
  cern.c2mon.daq.opcua.security.CertificateGenerator o-- cern.c2mon.daq.opcua.config.AppConfigProperties : config
  cern.c2mon.daq.opcua.security.CertificateLoader -up-|> cern.c2mon.daq.opcua.security.CertifierBase
  cern.c2mon.daq.opcua.security.CertificateLoader o-- cern.c2mon.daq.opcua.config.AppConfigProperties.KeystoreConfig : keystoreConfig
  cern.c2mon.daq.opcua.security.CertificateLoader o-- cern.c2mon.daq.opcua.config.AppConfigProperties.PKIConfig : pkiConfig
  cern.c2mon.daq.opcua.security.CertifierBase .up.|> cern.c2mon.daq.opcua.security.Certifier
  cern.c2mon.daq.opcua.security.NoSecurityCertifier .up.|> cern.c2mon.daq.opcua.security.Certifier


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
