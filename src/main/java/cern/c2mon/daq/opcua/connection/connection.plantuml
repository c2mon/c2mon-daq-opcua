@startuml

title __CONNECTION's Class Diagram__\n

  namespace cern.c2mon.daq.opcua {
    namespace connection {
      interface cern.c2mon.daq.opcua.connection.Endpoint {
          {abstract} + callMethod()
          {abstract} + deleteItemFromSubscription()
          {abstract} + disconnect()
          {abstract} + getServerRedundancyNode()
          {abstract} + getUri()
          {abstract} + initialize()
          {abstract} + manageSessionActivityListener()
          {abstract} + read()
          {abstract} + recreateAllSubscriptions()
          {abstract} + recreateSubscription()
          {abstract} + subscribe()
          {abstract} + subscribeWithCallback()
          {abstract} + write()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace connection {
      class cern.c2mon.daq.opcua.connection.MiloEndpoint {
          - client : OpcUaClient
          - disconnectedOn : AtomicLong
          {static} - hostRegex : String
          {static} - log : Logger
          - mode : MonitoringMode
          - sessionActivityListeners : Collection<SessionActivityListener>
          - subscriptionMap : BiMap<Integer, UaSubscription>
          - uri : String
          + MiloEndpoint()
          + callMethod()
          + deleteItemFromSubscription()
          + disconnect()
          + getServerRedundancyNode()
          + getUri()
          + initialize()
          + manageSessionActivityListener()
          + onSessionActive()
          + onSessionInactive()
          + onStatusChanged()
          + onSubscriptionTransferFailed()
          + read()
          + recreateAllSubscriptions()
          + recreateSubscription()
          + setMode()
          + subscribe()
          + subscribeWithCallback()
          + write()
          - callMethod()
          - deleteSubscription()
          - getDisconnectPeriod()
          - getOrCreateSubscription()
          - getParentObjectNodeId()
          - recreate()
          - resubscribeGroupsAndReportSuccess()
          - toMonitoredItemCreateRequest()
          {static} - updateEndpointUrls()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace connection {
      abstract class cern.c2mon.daq.opcua.connection.MiloMapper {
          {static} - log : Logger
          {static} + getDataTagQuality()
          {static} + toObject()
          {static} + toObject()
      }
    }
  }
  

  namespace cern.c2mon.daq.opcua {
    namespace connection {
      class cern.c2mon.daq.opcua.connection.SecurityModule {
          - builder : OpcUaClientConfigBuilder
          - key2Certifier : Map<String, Certifier>
          {static} - log : Logger
          + SecurityModule()
          + createClientWithListeners()
          + setBuilder()
          - connectIfPossible()
          - getValidator()
          - handleAndReportWhetherToContinue()
          - isUsrPwdConfigured()
      }
    }
  }
  

  cern.c2mon.daq.opcua.connection.MiloEndpoint .up.|> cern.c2mon.daq.opcua.connection.Endpoint
  cern.c2mon.daq.opcua.connection.MiloEndpoint .up.|> org.eclipse.milo.opcua.sdk.client.SessionActivityListener
  cern.c2mon.daq.opcua.connection.MiloEndpoint .up.|> org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscriptionManager.SubscriptionListener
  cern.c2mon.daq.opcua.connection.MiloEndpoint o-- cern.c2mon.daq.opcua.mapping.TagSubscriptionReader : mapper
  cern.c2mon.daq.opcua.connection.MiloEndpoint o-- cern.c2mon.daq.opcua.tagHandling.IMessageSender : messageSender
  cern.c2mon.daq.opcua.connection.MiloEndpoint o-- cern.c2mon.daq.opcua.RetryDelegate : retryDelegate
  cern.c2mon.daq.opcua.connection.MiloEndpoint o-- cern.c2mon.daq.opcua.connection.SecurityModule : securityModule
  cern.c2mon.daq.opcua.connection.SecurityModule o-- cern.c2mon.daq.opcua.config.AppConfigProperties : config


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
