#!/bin/bash
#
# Copyright (C) 2010-2016 CERN. All rights not expressly granted are reserved.
# 
# This file is part of the CERN Control and Monitoring Platform 'C2MON'.
# C2MON is free software: you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the license.
# 
# C2MON is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
# more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with C2MON. If not, see <http://www.gnu.org/licenses/>.
##

# Start script for C2MON-DAQ-STARTUP.jvm

function usage {
  echo "usage: $0 [-dft] [-c file] [-l file] [-p URI] [-s file] process_name";
  echo
  echo " The additional options are :                                                         "
  echo "  -c file    Starts the DAQ with a local configuration file, instead of asking C2MON. "
  echo "  -d         Enables dynamic time deadband filtering for all DataTags                 "
  echo "  -f         Logs only on the console. Cannot be mixed with -l option.                "
  echo "  -l file    Allows to specify and alternative log configuration file.                "
  echo "  -p URI     Alternative URI of the C2MON properties file.                            "
  echo "  -s file    Saves received conf.xml in a file.                                       "
  echo "  -t         Starts the DAQ in test mode. No JMS connections will be established.     "
}

# check if JAVA_HOME is set
if [ -z $JAVA_HOME ]; then
   # try to find java if not
   export JAVA="$(readlink -f $(which java))"
else
   export JAVA=$JAVA_HOME/bin/java
fi

# set DAQ home path
if [ -z "$DAQ_HOME" ] ; then
 # get the current location 
 SCRIPT=`readlink -f $(which $0)`
 SCRIPTPATH=`dirname $SCRIPT`
 DAQ_HOME="$(dirname "$SCRIPTPATH")"
fi

CLASSPATH=`ls $DAQ_HOME/lib/*.jar | tr -s '\n' ':'`
cd $DAQ_HOME


# Default values
LOGGING_CONFIG="-Dlogging.config=$DAQ_HOME/conf/logback.xml -Dlogging.path=$DAQ_HOME/log";
DAQ_PROPERTIES_FILE="-Dc2mon.daq.properties.location=file://$DAQ_HOME/conf/c2mon-daq.properties"
ADDITIONAL_PROPERTIES="";
JVM_MEM="-Xms256m -Xmx256m"
JVM_OTHER_OPTS=()

#
# Read extra options
#
while getopts c:dfl:p:s:t flag; do
  case $flag in
    c)
      ADDITIONAL_PROPERTIES="$ADDITIONAL_PROPERTIES -Dc2mon.daq.config.local.file=$OPTARG";
      ;;
    d)
      ADDITIONAL_PROPERTIES="$ADDITIONAL_PROPERTIES -Dc2mon.daq.deadband.dynamic.enabled=true";
      ;;
    f)
      LOGGING_CONFIG="";
      ;;
    l)
      LOGGING_CONFIG="-Dlogging.config=$OPTARG -Dlogging.path=$DAQ_HOME/log";
      ;;
    p)
      DAQ_PROPERTIES_FILE="-Dc2mon.daq.properties.location=$OPTARG";
      ;;
    s)
      ADDITIONAL_PROPERTIES="$ADDITIONAL_PROPERTIES -Dc2mon.daq.config.remote.file=$OPTARG";
      ;;
    t)
      ADDITIONAL_PROPERTIES="$ADDITIONAL_PROPERTIES -Dc2mon.daq.jms.mode=test";
      ;;
    ?)
      usage;
      exit 1;
      ;;
  esac
done

shift $(( OPTIND - 1 ));


# Process name must be given on the first argument
[[ -z $1 ]] && usage && exit 1
PROCESS_NAME=$1


JINTEGRA_ARGS="-DJINTEGRA_LOG_LEVEL=1 -DJINTEGRA_LOG_ROLLOVER_LINECOUNT=100000 -DJINTEGRA_LOG_FILE=$DAQ_HOME/log/${PROCESS_NAME}.jintegra.log"

exec -a `basename $0` $JAVA -cp "$CLASSPATH" -Dc2mon.daq.name="${PROCESS_NAME}" $DAQ_PROPERTIES_FILE $ADDITIONAL_PROPERTIES $JINTEGRA_ARGS $LOGGING_CONFIG $JVM_MEM "${JVM_OTHER_OPTS[@]}" cern.c2mon.daq.DaqStartup
